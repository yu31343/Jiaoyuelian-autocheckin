# .github/workflows/daily-checkin.yml
name: Daily NatPierce Check-in

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '10 2 * * *' # 每天UTC时间02:10运行 (对应UTC+8的10:10，确保在可签到时间后)

jobs:
  check-in:
    runs-on: ubuntu-latest # 使用最新的Ubuntu环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v3 # 检出你的仓库代码

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # 或者你希望的Node.js版本

    - name: Install Node.js dependencies
      run: npm install puppeteer # 安装puppeteer库

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x' # Use the latest Python 3.x version

    - name: Install Python dependencies
      run: pip install requests opencv-python numpy Pillow

    - name: Run check-in and push notification script
      id: checkin_and_notify_step # Renamed ID for clarity
      env:
        NATPIERCE_USERNAME: ${{ secrets.NATPIERCE_USERNAME }} # Pass username to checkin.js
        NATPIERCE_PASSWORD: ${{ secrets.NATPIERCE_PASSWORD }} # Pass password to checkin.js
        token: ${{ secrets.PUSHPLUS_TOKEN }} # From GitHub Secrets for PushPlus token
      run: |
        # Run checkin.js and capture its output
        CHECKIN_OUTPUT=$(node checkin.js)
        CHECKIN_RESULT=$(echo "$CHECKIN_OUTPUT" | awk -F'CHECKIN_RESULT: ' '/CHECKIN_RESULT:/ {print $2}')

        # Print the full output of checkin.js for debugging
        echo "Full checkin.js output:"
        echo "$CHECKIN_OUTPUT"

        # Print the extracted result
        echo "Extracted CHECKIN_RESULT: $CHECKIN_RESULT"

        # Run push_notification.py with the extracted result
        python push_notification.py "$CHECKIN_RESULT"

    - name: Upload debug artifacts
      if: 1
      uses: actions/upload-artifact@v4
      with:
        name: debug-artifacts
        path: debug/
